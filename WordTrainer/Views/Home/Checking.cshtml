@model IEnumerable<WordTrainer.Models.Word>



<div class="container my-5 pt-2">

    <div class="py-2 pb-4">
        <div class="progress" style="height: 20px;">
            <div id="scores" class="progress-bar bg-secondary" role="progressbar"
                 style="width: 0%" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
        </div>
    </div>

    <div class="form-group pb-0">
        <div class="row">
            <div class="col-12 text-center ">
                <h3 class="h3  text-secondary" id="word"
                    style="font-size: 20pt; 
                        font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif"></h3>
            </div>
        </div>
    </div>
    
    <div class="form-group">
        <input type="text" class="form-control text-center" 
               style="font-size: 20pt; font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif" name="trans" id="trans" />
    </div>

    <div class="form-group text-center">
        <button type="submit" class="btn btn-dark" id="btn">Check</button>
    </div>
</div>

<div id="output">

</div>


    
<script type="module">

    import { Word } from '/script.js';

    var word = document.getElementById("word");
    var trans = document.getElementById("trans");
    var btn = document.getElementById("btn");
    var scores = document.getElementById("scores");

    trans.addEventListener("keyup", function (e) {
        if (e.keyCode == 13) {
            btn.click();
            this.value = "";
        }
    });

    // get data from local storage
    var temp = JSON.parse(localStorage.getItem("model"));
    var arr = [];

    for (const i of temp) {
        arr.push(Word.parse(i));
    }

    var ammount = arr.length;

    scores.attributes["aria-valuemax"].value = 100;

    // actions
    var counter = 0;
    var points = 0;

    function load() {
        var question = arr[counter];
        word.innerText = question.text;
        trans.value = "";
        trans.focus();
    }
    load();

    btn.addEventListener("click", btnCallback);
    function btnCallback(e) {
        var getTrans = trans.value.toLowerCase().trim();
        if (getTrans === "") {
            e.preventDefault();
        }
        else {
            console.log(arr[counter].translation.toLowerCase().split(","));
            if (arr[counter].translation.toLowerCase().split(",").includes(getTrans) || arr[counter].translation.toLowerCase().split(",").includes(" " + getTrans)) {
                
                points += 1;
                var tempScores = points * 100 / ammount;
                 scores.innerText = tempScores.toFixed(1) + '%';
                scores.style.width = tempScores + '%';
                scores.attributes["aria-valuenow"].value = tempScores;

                if (counter < ammount - 1) {
                    counter++;
                    load();
                }
                else {
                    trans.value = "";
                    trans.setAttribute('disabled', 'true');
                    word.value = "";
                }
            }
            else {
                if (counter < ammount - 1) {
                    counter++;
                    load();
                }
                else {
                    trans.value = "";
                    word.value = "";
                }
            }
        }
    }
</script>
